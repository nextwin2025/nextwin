generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  accounts      Account[]
  sessions      Session[]
  competitions  Competition[]  @relation("UserCompetitions")
  predictions   Prediction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Competition {
  id          String       @id @default(cuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  status      String       @default("upcoming")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  users       User[]       @relation("UserCompetitions")
  predictions Prediction[]
}

model Prediction {
  id            String     @id @default(cuid())
  userId        String
  competitionId String
  prediction    String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  user          User       @relation(fields: [userId], references: [id])
  competition   Competition @relation(fields: [competitionId], references: [id])
} 